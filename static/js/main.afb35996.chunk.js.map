{"version":3,"sources":["component/Button.js","component/Header.js","component/Task.js","component/Tasks.js","component/AddTask.js","component/Footer.js","component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","prototype","PropTypes","String","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setshowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","addTask","method","headers","body","JSON","stringify","deleteTask","filter","fetchTask","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afb35996.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n \r\n    return <button onClick ={onClick} style={{backgroundColor:color}} \r\n            className='btn'>{text}</button>\r\n\r\n}\r\nButton.defaultProps={\r\n    color:'steelblue'\r\n}\r\n\r\nButton.propTypes={\r\n    text:PropTypes.string,\r\n    color:PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Header = ({title,onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n            <h1 >{title}</h1> \r\n            {location.pathname==='/'&&         \r\n            <Button color ={showAdd?'red':'green'} text= {showAdd?'Close':'Add'} onClick={onAdd} />\r\n            }\r\n        </header>   \r\n  \r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    title:'Task Tacker',\r\n}\r\n\r\nHeader.prototype={\r\n    title:PropTypes.String,\r\n}\r\n\r\n// const headingStyle = {   //css in js\r\n//     color:'red',\r\n//     backgrounColor:'black',\r\n// }\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task,onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder? 'reminder' :''}`} onDoubleClick={()=>onToggle(task.id)} >\r\n            <h3>\r\n                {task.text}{' '} <FaTimes style={{color: \r\n                'red', cursor:'pointer' }} onClick={()=>onDelete(task.id)} />\r\n            </h3>\r\n            <h3>{task.day}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n\r\n    return (\r\n        <>\r\n          {tasks.map((task,index)=>(\r\n            <Task \r\n              key={index}\r\n              task = {task} \r\n              onDelete={onDelete} \r\n              onToggle={onToggle}\r\n            />\r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] =useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text,day,reminder})\r\n\r\n        setText('')\r\n        setDay ('')\r\n        setReminder(false) \r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit= {onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                type='text' \r\n                placeholder ='AddTask' \r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                />    \r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input \r\n                type='text' \r\n                placeholder ='Add Day &Time' \r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}\r\n                />    \r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label> Set Reminder</label>\r\n                <input \r\n                type='checkbox'\r\n                checked ={reminder} \r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)} \r\n                />\r\n            </div>\r\n\r\n            <input type='submit' value ='Save Task' className ='btn btn-block' />\r\n        </form>\r\n       )\r\n}\r\n\r\n\r\n\r\nexport default AddTask\r\n","import  {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n             <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer\r\n","import  {Link} from 'react-router-dom'\r\n\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/react'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from './component/Header'\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport Tasks from './component/Tasks.js'\nimport {useState ,useEffect } from 'react'\nimport AddTask from './component/AddTask'\nimport Footer from './component/Footer'\nimport About from './component/About'\n\nfunction App() {\n  const [showAddTask, setshowAddTask] = useState(false)\n  const [tasks,setTasks] = useState( [])\n\n  useEffect(() => {\n    const getTasks = async ()=>{\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n   \n    getTasks()\n  },[])\n\n  //fetch Tasks\n  const fetchTasks = async()=>{\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n//Add Task\nconst addTask=async (task)=>{\n  const res =await fetch('http://localhost:5000/tasks',{\n    method:'POST',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body:JSON.stringify(task)\n  })\n\n  const data = await res.json()\n  setTasks([...tasks,data])\n  \n  //  const id =Math.floor(Math.random()*10000+1)\n  //  const newTask = {id,...task}\n  //  setTasks([...tasks,newTask])\n}\n\n//Delete Task\n  const deleteTask = async (id)=>{\n    await fetch(`https://thestreaky.github.io/react/tasks/${id}`,{\n      method:'DELETE',\n    })\n\n    setTasks(tasks.filter((task)=>task.id!==id))\n  }\n//fetch Task\n const fetchTask = async(id)=>{\n    const res = await fetch(`https://thestreaky.github.io/react/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  //toggle reminder\n  const toggleReminder=async (id)=>{\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle,reminder:!taskToToggle.reminder}\n    \n    const res = await fetch(`https://thestreaky.github.io/react/tasks/${id}`,\n    {method:'PUT',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body:JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n   \n    setTasks(tasks.map((task)=>\n      task.id===id?{...task,reminder:\n        data.reminder}:task\n      )\n    )\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={()=>setshowAddTask(!showAddTask)} \n      showAdd={showAddTask}/>\n      {/* {showAddTask&&<AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n      )}  */}\n      <Route path = '/' exact render={(props) => ( \n        <>\n          {showAddTask&&<AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n      )} \n        </>\n\n      )}\n      />\n      <Route path='/about' component={About} />\n      <Footer />  \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}